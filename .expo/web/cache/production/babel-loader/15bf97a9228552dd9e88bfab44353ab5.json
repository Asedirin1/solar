{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import*as React from'react';import MapView,{Heatmap}from'react-native-maps';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import{points}from\"../points\";import{useState}from'react/cjs/react.development';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";export function heatMap(){var _useState=useState(\"WA\"),_useState2=_slicedToArray(_useState,2),sstate=_useState2[0],setState=_useState2[1];var lat=0;var lng=0;localStorage;getcoords();var state={initialPosition:{latitude:37.0902,longitude:-95.7129,latitudeDelta:57,longitudeDelta:57}};console.log(lat);console.log(lng);return _jsx(View,{style:styles.container,children:_jsx(MapView,{provider:\"google\",style:styles.map,initialRegion:state.initialPosition,children:_jsx(Heatmap,{points:points,radius:40,opacity:1,gradient:{colors:[\"black\",\"purple\",\"red\",\"orange\",\"white\"],startPoints:Platform.OS==='ios'?[0.01,0.04,0.1,0.45,0.5]:[0.1,0.25,0.5,0.75,1],colorMapSize:2000}})})});function getcoords(){var options={method:'GET',url:'http://open.mapquestapi.com/geocoding/v1/address?key=saD6wA8skX1MAzw7nKIyqh9LhoxZ0a46&location='+sstate};axios.request(options).then(function(response){console.log(response.data.results[0].locations[0].latLng.lat);responses=response;lat=response.data.results[0].locations[0].latLng.lat;lng=response.data.results[0].locations[0].latLng.lng;}).catch(function(error){console.error(error);});}}var styles=StyleSheet.create({container:{flex:1,backgroundColor:'#fff',alignItems:'center',justifyContent:'center'},map:{width:Dimensions.get('window').width,height:Dimensions.get('window').height}});","map":{"version":3,"sources":["C:/Users/Adith/sp/screens/heatMap.js"],"names":["React","MapView","Heatmap","points","useState","axios","heatMap","sstate","setState","lat","lng","localStorage","getcoords","state","initialPosition","latitude","longitude","latitudeDelta","longitudeDelta","console","log","styles","container","map","colors","startPoints","Platform","OS","colorMapSize","options","method","url","request","then","response","data","results","locations","latLng","responses","catch","error","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","Dimensions","get","height"],"mappings":"iEAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAOC,CAAAA,OAAP,EAAkBC,OAAlB,KAAiC,mBAAjC,C,4OAEA,OAASC,MAAT,iBACA,OAASC,QAAT,KAAyB,6BAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,2CAIA,MAAO,SAASC,CAAAA,OAAT,EAAmB,CACxB,cAA2BF,QAAQ,CAAC,IAAD,CAAnC,wCAAOG,MAAP,eAAeC,QAAf,eACA,GAAIC,CAAAA,GAAG,CAAG,CAAV,CACA,GAAIC,CAAAA,GAAG,CAAG,CAAV,CACAC,YAAY,CACZC,SAAS,GAET,GAAMC,CAAAA,KAAK,CAAG,CACZC,eAAe,CAAE,CACfC,QAAQ,CAAE,OADK,CAEfC,SAAS,CAAE,CAAC,OAFG,CAGfC,aAAa,CAAE,EAHA,CAIfC,cAAc,CAAE,EAJD,CADL,CAAd,CASAC,OAAO,CAACC,GAAR,CAAYX,GAAZ,EACAU,OAAO,CAACC,GAAR,CAAYV,GAAZ,EAEE,MACE,MAAC,IAAD,EAAM,KAAK,CAAEW,MAAM,CAACC,SAApB,UAEE,KAAC,OAAD,EACE,QAAQ,CAAC,QADX,CAGE,KAAK,CAAED,MAAM,CAACE,GAHhB,CAIE,aAAa,CAAEV,KAAK,CAACC,eAJvB,UAKE,KAAC,OAAD,EACE,MAAM,CAAEX,MADV,CAEE,MAAM,CAAE,EAFV,CAGE,OAAO,CAAE,CAHX,CAIE,QAAQ,CAAE,CACRqB,MAAM,CAAE,CAAC,OAAD,CAAU,QAAV,CAAoB,KAApB,CAA2B,QAA3B,CAAqC,OAArC,CADA,CAERC,WAAW,CAAEC,QAAQ,CAACC,EAAT,GAAgB,KAAhB,CAAwB,CAAC,IAAD,CAAO,IAAP,CAAa,GAAb,CAAkB,IAAlB,CAAwB,GAAxB,CAAxB,CACX,CAAC,GAAD,CAAM,IAAN,CAAY,GAAZ,CAAiB,IAAjB,CAAuB,CAAvB,CAHM,CAIRC,YAAY,CAAE,IAJN,CAJZ,EALF,EAFF,EADF,CAuBA,QAAShB,CAAAA,SAAT,EAAqB,CAInB,GAAIiB,CAAAA,OAAO,CAAG,CACZC,MAAM,CAAE,KADI,CAEZC,GAAG,CAAE,kGAAoGxB,MAF7F,CAAd,CAMAF,KAAK,CAAC2B,OAAN,CAAcH,OAAd,EAAuBI,IAAvB,CAA4B,SAAUC,QAAV,CAAoB,CAC5Cf,OAAO,CAACC,GAAR,CAAYc,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsB,CAAtB,EAAyBC,SAAzB,CAAmC,CAAnC,EAAsCC,MAAtC,CAA6C7B,GAAzD,EACA8B,SAAS,CAAGL,QAAZ,CACAzB,GAAG,CAAGyB,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsB,CAAtB,EAAyBC,SAAzB,CAAmC,CAAnC,EAAsCC,MAAtC,CAA6C7B,GAAnD,CACAC,GAAG,CAAGwB,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsB,CAAtB,EAAyBC,SAAzB,CAAmC,CAAnC,EAAsCC,MAAtC,CAA6C5B,GAAnD,CAGH,CAPD,EAOG8B,KAPH,CAOS,SAAUC,KAAV,CAAiB,CACxBtB,OAAO,CAACsB,KAAR,CAAcA,KAAd,EACD,CATD,EAUD,CAEJ,CAGD,GAAMpB,CAAAA,MAAM,CAAGqB,UAAU,CAACC,MAAX,CAAkB,CAC/BrB,SAAS,CAAE,CACTsB,IAAI,CAAE,CADG,CAETC,eAAe,CAAE,MAFR,CAGTC,UAAU,CAAE,QAHH,CAITC,cAAc,CAAE,QAJP,CADoB,CAO/BxB,GAAG,CAAE,CACHyB,KAAK,CAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAD7B,CAEHG,MAAM,CAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAF9B,CAP0B,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\r\nimport MapView, { Heatmap } from 'react-native-maps';\r\nimport { StyleSheet, Text, View, Dimensions } from 'react-native';\r\nimport { points } from '../points';\r\nimport { useState } from 'react/cjs/react.development';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport function heatMap() {\r\n  const [sstate, setState] = useState(\"WA\")\r\n  var lat = 0\r\n  var lng = 0\r\n  localStorage\r\n  getcoords()\r\n  \r\n  const state = {\r\n    initialPosition: {\r\n      latitude: 37.0902,\r\n      longitude: -95.7129,\r\n      latitudeDelta: 57,\r\n      longitudeDelta: 57\r\n    }\r\n  }\r\n\r\n  console.log(lat)\r\n  console.log(lng)\r\n  \r\n    return (\r\n      <View style={styles.container}>\r\n\r\n        <MapView\r\n          provider=\"google\"\r\n          \r\n          style={styles.map}\r\n          initialRegion={state.initialPosition}>\r\n          <Heatmap\r\n            points={points}\r\n            radius={40}\r\n            opacity={1}\r\n            gradient={{\r\n              colors: [\"black\", \"purple\", \"red\", \"orange\", \"white\"],\r\n              startPoints: Platform.OS === 'ios' ? [0.01, 0.04, 0.1, 0.45, 0.5] :\r\n                [0.1, 0.25, 0.5, 0.75, 1],\r\n              colorMapSize: 2000\r\n            }}\r\n          >\r\n          </Heatmap>\r\n        </MapView>\r\n      </View>\r\n    );\r\n    function getcoords() {\r\n        \r\n  \r\n  \r\n      var options = {\r\n        method: 'GET',\r\n        url: 'http://open.mapquestapi.com/geocoding/v1/address?key=saD6wA8skX1MAzw7nKIyqh9LhoxZ0a46&location=' + sstate,\r\n        \r\n      };\r\n    \r\n      axios.request(options).then(function (response) {\r\n          console.log(response.data.results[0].locations[0].latLng.lat)\r\n          responses = response\r\n          lat = response.data.results[0].locations[0].latLng.lat\r\n          lng = response.data.results[0].locations[0].latLng.lng\r\n    \r\n    \r\n      }).catch(function (error) {\r\n        console.error(error);\r\n      });\r\n    }\r\n  \r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  map: {\r\n    width: Dimensions.get('window').width,\r\n    height: Dimensions.get('window').height,\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}