{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport { toJSONString, viewPropTypes } from \"../utils\";\nimport { makePoint } from \"../utils/geoUtils\";\nimport PointAnnotation from \"./PointAnnotation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var NATIVE_MODULE_NAME = 'RCTMGLMarkerView';\n\nvar MarkerView = function (_React$PureComponent) {\n  _inherits(MarkerView, _React$PureComponent);\n\n  var _super = _createSuper(MarkerView);\n\n  function MarkerView() {\n    _classCallCheck(this, MarkerView);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MarkerView, [{\n    key: \"_getCoordinate\",\n    value: function _getCoordinate() {\n      if (!this.props.coordinate) {\n        return undefined;\n      }\n\n      return toJSONString(makePoint(this.props.coordinate));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (Platform.OS === 'ios') {\n        return _jsx(PointAnnotation, _objectSpread({}, this.props));\n      }\n\n      var props = _objectSpread(_objectSpread({}, this.props), {}, {\n        anchor: this.props.anchor,\n        coordinate: this._getCoordinate()\n      });\n\n      return _jsx(RCTMGLMarkerView, _objectSpread(_objectSpread({}, props), {}, {\n        children: this.props.children\n      }));\n    }\n  }]);\n\n  return MarkerView;\n}(React.PureComponent);\n\nMarkerView.propTypes = _objectSpread(_objectSpread({}, viewPropTypes), {}, {\n  coordinate: PropTypes.arrayOf(PropTypes.number).isRequired,\n  anchor: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }),\n  children: PropTypes.element.isRequired\n});\nMarkerView.defaultProps = {\n  anchor: {\n    x: 0.5,\n    y: 0.5\n  }\n};\nvar RCTMGLMarkerView = Platform.OS === 'android' ? requireNativeComponent(NATIVE_MODULE_NAME, MarkerView, {}) : undefined;\nexport default MarkerView;","map":{"version":3,"sources":["C:/Users/Adith/sp/node_modules/@react-native-mapbox-gl/maps/javascript/components/MarkerView.js"],"names":["React","PropTypes","requireNativeComponent","toJSONString","viewPropTypes","makePoint","PointAnnotation","NATIVE_MODULE_NAME","MarkerView","props","coordinate","undefined","Platform","OS","anchor","_getCoordinate","children","PureComponent","propTypes","arrayOf","number","isRequired","shape","x","y","element","defaultProps","RCTMGLMarkerView"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;SACkBC,sB;AAElB,SAAQC,YAAR,EAAsBC,aAAtB;AACA,SAAQC,SAAR;AAEA,OAAOC,eAAP;;AAEA,OAAO,IAAMC,kBAAkB,GAAG,kBAA3B;;IAUDC,U;;;;;;;;;;;;;WAsCJ,0BAAiB;AACf,UAAI,CAAC,KAAKC,KAAL,CAAWC,UAAhB,EAA4B;AAC1B,eAAOC,SAAP;AACD;;AACD,aAAOR,YAAY,CAACE,SAAS,CAAC,KAAKI,KAAL,CAAWC,UAAZ,CAAV,CAAnB;AACD;;;WAED,kBAAS;AACP,UAAIE,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;AACzB,eAAO,KAAC,eAAD,oBAAqB,KAAKJ,KAA1B,EAAP;AACD;;AAED,UAAMA,KAAK,mCACN,KAAKA,KADC;AAETK,QAAAA,MAAM,EAAE,KAAKL,KAAL,CAAWK,MAFV;AAGTJ,QAAAA,UAAU,EAAE,KAAKK,cAAL;AAHH,QAAX;;AAMA,aACE,KAAC,gBAAD,kCAAsBN,KAAtB;AAAA,kBAA8B,KAAKA,KAAL,CAAWO;AAAzC,SADF;AAGD;;;;EA3DsBhB,KAAK,CAACiB,a;;AAAzBT,U,CACGU,S,mCACFd,a;AAMHM,EAAAA,UAAU,EAAET,SAAS,CAACkB,OAAV,CAAkBlB,SAAS,CAACmB,MAA5B,EAAoCC,U;AAShDP,EAAAA,MAAM,EAAEb,SAAS,CAACqB,KAAV,CAAgB;AAItBC,IAAAA,CAAC,EAAEtB,SAAS,CAACmB,MAAV,CAAiBC,UAJE;AAQtBG,IAAAA,CAAC,EAAEvB,SAAS,CAACmB,MAAV,CAAiBC;AARE,GAAhB,C;AAcRL,EAAAA,QAAQ,EAAEf,SAAS,CAACwB,OAAV,CAAkBJ;;AA/B1Bb,U,CAkCGkB,Y,GAAe;AACpBZ,EAAAA,MAAM,EAAE;AAACS,IAAAA,CAAC,EAAE,GAAJ;AAASC,IAAAA,CAAC,EAAE;AAAZ;AADY,C;AA4BxB,IAAMG,gBAAgB,GACpBf,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GACIX,sBAAsB,CAACK,kBAAD,EAAqBC,UAArB,EAAiC,EAAjC,CAD1B,GAEIG,SAHN;AAKA,eAAeH,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Platform, requireNativeComponent} from 'react-native';\n\nimport {toJSONString, viewPropTypes} from '../utils';\nimport {makePoint} from '../utils/geoUtils';\n\nimport PointAnnotation from './PointAnnotation';\n\nexport const NATIVE_MODULE_NAME = 'RCTMGLMarkerView';\n\n/**\n * MarkerView allows you to place a interactive react native marker to the map.\n *\n * If you have static view consider using PointAnnotation or SymbolLayer they'll offer much better performance\n * .\n * This is based on [MakerView plugin](https://docs.mapbox.com/android/plugins/overview/markerview/) on Android\n * and PointAnnotation on iOS.\n */\nclass MarkerView extends React.PureComponent {\n  static propTypes = {\n    ...viewPropTypes,\n\n    /**\n     * The center point (specified as a map coordinate) of the marker.\n     * See also #anchor.\n     */\n    coordinate: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n    /**\n     * Specifies the anchor being set on a particular point of the annotation.\n     * The anchor point is specified in the continuous space [0.0, 1.0] x [0.0, 1.0],\n     * where (0, 0) is the top-left corner of the image, and (1, 1) is the bottom-right corner.\n     * Note this is only for custom annotations not the default pin view.\n     * Defaults to the center of the view.\n     */\n    anchor: PropTypes.shape({\n      /**\n       * `x` of anchor\n       */\n      x: PropTypes.number.isRequired,\n      /**\n       * `y` of anchor\n       */\n      y: PropTypes.number.isRequired,\n    }),\n\n    /**\n     * Expects one child - can be container with multiple elements\n     */\n    children: PropTypes.element.isRequired,\n  };\n\n  static defaultProps = {\n    anchor: {x: 0.5, y: 0.5},\n  };\n\n  _getCoordinate() {\n    if (!this.props.coordinate) {\n      return undefined;\n    }\n    return toJSONString(makePoint(this.props.coordinate));\n  }\n\n  render() {\n    if (Platform.OS === 'ios') {\n      return <PointAnnotation {...this.props} />;\n    }\n\n    const props = {\n      ...this.props,\n      anchor: this.props.anchor,\n      coordinate: this._getCoordinate(),\n    };\n\n    return (\n      <RCTMGLMarkerView {...props}>{this.props.children}</RCTMGLMarkerView>\n    );\n  }\n}\n\nconst RCTMGLMarkerView =\n  Platform.OS === 'android'\n    ? requireNativeComponent(NATIVE_MODULE_NAME, MarkerView, {})\n    : undefined;\n\nexport default MarkerView;\n"]},"metadata":{},"sourceType":"module"}