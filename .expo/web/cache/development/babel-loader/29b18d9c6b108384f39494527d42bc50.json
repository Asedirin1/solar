{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport { toJSONString, viewPropTypes, existenceChange } from \"../utils\";\nimport * as geoUtils from \"../utils/geoUtils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar MapboxGL = NativeModules.MGLModule;\nexport var NATIVE_MODULE_NAME = 'RCTMGLCamera';\nvar SettingsPropTypes = {\n  centerCoordinate: PropTypes.arrayOf(PropTypes.number),\n  padding: PropTypes.shape({\n    paddingLeft: PropTypes.number,\n    paddingRight: PropTypes.number,\n    paddingTop: PropTypes.number,\n    paddingBottom: PropTypes.number\n  }),\n  heading: PropTypes.number,\n  pitch: PropTypes.number,\n  bounds: PropTypes.shape({\n    ne: PropTypes.arrayOf(PropTypes.number).isRequired,\n    sw: PropTypes.arrayOf(PropTypes.number).isRequired,\n    paddingLeft: PropTypes.number,\n    paddingRight: PropTypes.number,\n    paddingTop: PropTypes.number,\n    paddingBottom: PropTypes.number\n  }),\n  onUserTrackingModeChange: PropTypes.func,\n  zoomLevel: PropTypes.number\n};\n\nvar Camera = function (_React$Component) {\n  _inherits(Camera, _React$Component);\n\n  var _super = _createSuper(Camera);\n\n  function Camera() {\n    _classCallCheck(this, Camera);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Camera, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      this._handleCameraChange(this.props, nextProps);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"_handleCameraChange\",\n    value: function _handleCameraChange(currentCamera, nextCamera) {\n      var c = currentCamera;\n      var n = nextCamera;\n\n      if (!n.allowUpdates) {\n        return;\n      }\n\n      var hasCameraChanged = this._hasCameraChanged(c, n);\n\n      if (!hasCameraChanged) {\n        return;\n      }\n\n      if (c.followUserLocation && !n.followUserLocation) {\n        this.refs.camera.setNativeProps({\n          followUserLocation: false\n        });\n        return;\n      }\n\n      if (!c.followUserLocation && n.followUserLocation) {\n        this.refs.camera.setNativeProps({\n          followUserLocation: true\n        });\n      }\n\n      if (n.followUserLocation) {\n        this.refs.camera.setNativeProps({\n          followUserMode: n.followUserMode,\n          followPitch: n.followPitch || n.pitch,\n          followHeading: n.followHeading || n.heading,\n          followZoomLevel: n.followZoomLevel || n.zoomLevel\n        });\n        return;\n      }\n\n      if (n.maxBounds) {\n        this.refs.camera.setNativeProps({\n          maxBounds: this._getMaxBounds()\n        });\n      }\n\n      if (n.minZoomLevel) {\n        this.refs.camera.setNativeProps({\n          minZoomLevel: this.props.minZoomLevel\n        });\n      }\n\n      if (n.maxZoomLevel) {\n        this.refs.camera.setNativeProps({\n          maxZoomLevel: this.props.maxZoomLevel\n        });\n      }\n\n      var cameraConfig = {\n        bounds: undefined,\n        centerCoordinate: undefined,\n        padding: n.padding,\n        zoomLevel: n.zoomLevel,\n        pitch: n.pitch,\n        heading: n.heading,\n        animationMode: n.animationMode,\n        animationDuration: n.animationDuration\n      };\n\n      var boundsChanged = this._hasBoundsChanged(c.bounds, n.bounds);\n\n      var centerCoordinateChanged = this._hasCenterCoordinateChanged(c.centerCoordinate, n.centerCoordinate);\n\n      var paddingChanged = this._hasPaddingChanged(c.padding, n.padding);\n\n      var zoomChanged = this._hasNumberChanged(c.zoomLevel, n.zoomLevel);\n\n      var pitchChanged = this._hasNumberChanged(c.pitch, n.pitch);\n\n      var headingChanged = this._hasNumberChanged(c.heading, n.heading);\n\n      var shouldUpdate = false;\n\n      if (n.bounds && boundsChanged) {\n        cameraConfig.bounds = n.bounds;\n        shouldUpdate = true;\n      } else if (n.centerCoordinate && centerCoordinateChanged) {\n        cameraConfig.centerCoordinate = n.centerCoordinate;\n        shouldUpdate = true;\n      }\n\n      if (paddingChanged || zoomChanged || pitchChanged || headingChanged) {\n        shouldUpdate = true;\n      }\n\n      if (shouldUpdate) {\n        this._setCamera(cameraConfig);\n      }\n    }\n  }, {\n    key: \"_hasCameraChanged\",\n    value: function _hasCameraChanged(currentCamera, nextCamera) {\n      var c = currentCamera;\n      var n = nextCamera;\n      var hasDefaultPropsChanged = c.heading !== n.heading || this._hasCenterCoordinateChanged(c.centerCoordinate, n.centerCoordinate) || this._hasBoundsChanged(c.bounds, n.bounds) || this._hasPaddingChanged(c.padding, n.padding) || c.pitch !== n.pitch || c.zoomLevel !== n.zoomLevel || c.triggerKey !== n.triggerKey;\n      var hasFollowPropsChanged = c.followUserLocation !== n.followUserLocation || c.followUserMode !== n.followUserMode || c.followZoomLevel !== n.followZoomLevel || c.followHeading !== n.followHeading || c.followPitch !== n.followPitch;\n      var hasAnimationPropsChanged = c.animationMode !== n.animationMode || c.animationDuration !== n.animationDuration;\n      var hasNavigationConstraintsPropsChanged = this._hasBoundsChanged(c.maxBounds, n.maxBounds) || c.minZoomLevel !== n.minZoomLevel || c.maxZoomLevel !== n.maxZoomLevel;\n      return hasDefaultPropsChanged || hasFollowPropsChanged || hasAnimationPropsChanged || hasNavigationConstraintsPropsChanged;\n    }\n  }, {\n    key: \"_hasCenterCoordinateChanged\",\n    value: function _hasCenterCoordinateChanged(cC, nC) {\n      if (!cC && !nC) {\n        return false;\n      }\n\n      if (existenceChange(cC, nC)) {\n        return true;\n      }\n\n      var isLngDiff = cC[0] !== nC[0];\n      var isLatDiff = cC[1] !== nC[1];\n      return isLngDiff || isLatDiff;\n    }\n  }, {\n    key: \"_hasBoundsChanged\",\n    value: function _hasBoundsChanged(cB, nB) {\n      if (!cB && !nB) {\n        return false;\n      }\n\n      if (existenceChange(cB, nB)) {\n        return true;\n      }\n\n      return cB.ne[0] !== nB.ne[0] || cB.ne[1] !== nB.ne[1] || cB.sw[0] !== nB.sw[0] || cB.sw[1] !== nB.sw[1] || cB.paddingTop !== nB.paddingTop || cB.paddingLeft !== nB.paddingLeft || cB.paddingRight !== nB.paddingRight || cB.paddingBottom !== nB.paddingBottom;\n    }\n  }, {\n    key: \"_hasPaddingChanged\",\n    value: function _hasPaddingChanged(cP, nP) {\n      if (!cP && !nP) {\n        return false;\n      }\n\n      if (existenceChange(cP, nP)) {\n        return true;\n      }\n\n      return cP.paddingTop !== nP.paddingTop || cP.paddingLeft !== nP.paddingLeft || cP.paddingRight !== nP.paddingRight || cP.paddingBottom !== nP.paddingBottom;\n    }\n  }, {\n    key: \"_hasNumberChanged\",\n    value: function _hasNumberChanged(prev, next) {\n      if (existenceChange(prev, next)) {\n        return true;\n      }\n\n      if (!prev && !next) {\n        return false;\n      }\n\n      return prev !== next;\n    }\n  }, {\n    key: \"fitBounds\",\n    value: function fitBounds(northEastCoordinates, southWestCoordinates) {\n      var padding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var animationDuration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.0;\n      var pad = {\n        paddingLeft: 0,\n        paddingRight: 0,\n        paddingTop: 0,\n        paddingBottom: 0\n      };\n\n      if (Array.isArray(padding)) {\n        if (padding.length === 2) {\n          pad.paddingTop = padding[0];\n          pad.paddingBottom = padding[0];\n          pad.paddingLeft = padding[1];\n          pad.paddingRight = padding[1];\n        } else if (padding.length === 4) {\n          pad.paddingTop = padding[0];\n          pad.paddingRight = padding[1];\n          pad.paddingBottom = padding[2];\n          pad.paddingLeft = padding[3];\n        }\n      } else {\n        pad.paddingLeft = padding;\n        pad.paddingRight = padding;\n        pad.paddingTop = padding;\n        pad.paddingBottom = padding;\n      }\n\n      return this.setCamera({\n        bounds: {\n          ne: northEastCoordinates,\n          sw: southWestCoordinates\n        },\n        padding: pad,\n        animationDuration: animationDuration,\n        animationMode: Camera.Mode.Ease\n      });\n    }\n  }, {\n    key: \"flyTo\",\n    value: function flyTo(coordinates) {\n      var animationDuration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2000;\n      return this.setCamera({\n        centerCoordinate: coordinates,\n        animationDuration: animationDuration,\n        animationMode: Camera.Mode.Flight\n      });\n    }\n  }, {\n    key: \"moveTo\",\n    value: function moveTo(coordinates) {\n      var animationDuration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this.setCamera({\n        centerCoordinate: coordinates,\n        animationDuration: animationDuration\n      });\n    }\n  }, {\n    key: \"zoomTo\",\n    value: function zoomTo(zoomLevel) {\n      var animationDuration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2000;\n      return this.setCamera({\n        zoomLevel: zoomLevel,\n        animationDuration: animationDuration,\n        animationMode: Camera.Mode.Flight\n      });\n    }\n  }, {\n    key: \"setCamera\",\n    value: function setCamera() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this._setCamera(config);\n    }\n  }, {\n    key: \"_setCamera\",\n    value: function _setCamera() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var cameraConfig = {};\n\n      if (config.stops) {\n        cameraConfig.stops = [];\n\n        for (var _iterator = _createForOfIteratorHelperLoose(config.stops), _step; !(_step = _iterator()).done;) {\n          var stop = _step.value;\n          cameraConfig.stops.push(this._createStopConfig(stop));\n        }\n      } else {\n        cameraConfig = this._createStopConfig(config);\n      }\n\n      this.refs.camera.setNativeProps({\n        stop: cameraConfig\n      });\n    }\n  }, {\n    key: \"_createDefaultCamera\",\n    value: function _createDefaultCamera() {\n      if (this.defaultCamera) {\n        return this.defaultCamera;\n      }\n\n      if (!this.props.defaultSettings) {\n        return null;\n      }\n\n      this.defaultCamera = this._createStopConfig(_objectSpread(_objectSpread({}, this.props.defaultSettings), {}, {\n        animationMode: Camera.Mode.Move\n      }), true);\n      return this.defaultCamera;\n    }\n  }, {\n    key: \"_createStopConfig\",\n    value: function _createStopConfig() {\n      var _config$padding, _config$bounds2, _config$padding2, _config$bounds3, _config$padding3, _config$bounds4, _config$padding4, _config$bounds5;\n\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var ignoreFollowUserLocation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (this.props.followUserLocation && !ignoreFollowUserLocation) {\n        return null;\n      }\n\n      var stopConfig = {\n        mode: this._getNativeCameraMode(config),\n        pitch: config.pitch,\n        heading: config.heading,\n        duration: config.animationDuration || 0,\n        zoom: config.zoomLevel\n      };\n\n      if (config.centerCoordinate) {\n        stopConfig.centerCoordinate = toJSONString(geoUtils.makePoint(config.centerCoordinate));\n      }\n\n      if (config.bounds && config.bounds.ne && config.bounds.sw) {\n        var _config$bounds = config.bounds,\n            ne = _config$bounds.ne,\n            sw = _config$bounds.sw;\n        stopConfig.bounds = toJSONString(geoUtils.makeLatLngBounds(ne, sw));\n      }\n\n      stopConfig.paddingTop = ((_config$padding = config.padding) == null ? void 0 : _config$padding.paddingTop) || ((_config$bounds2 = config.bounds) == null ? void 0 : _config$bounds2.paddingTop) || 0;\n      stopConfig.paddingRight = ((_config$padding2 = config.padding) == null ? void 0 : _config$padding2.paddingRight) || ((_config$bounds3 = config.bounds) == null ? void 0 : _config$bounds3.paddingRight) || 0;\n      stopConfig.paddingBottom = ((_config$padding3 = config.padding) == null ? void 0 : _config$padding3.paddingBottom) || ((_config$bounds4 = config.bounds) == null ? void 0 : _config$bounds4.paddingBottom) || 0;\n      stopConfig.paddingLeft = ((_config$padding4 = config.padding) == null ? void 0 : _config$padding4.paddingLeft) || ((_config$bounds5 = config.bounds) == null ? void 0 : _config$bounds5.paddingLeft) || 0;\n      return stopConfig;\n    }\n  }, {\n    key: \"_getNativeCameraMode\",\n    value: function _getNativeCameraMode(config) {\n      switch (config.animationMode) {\n        case Camera.Mode.Flight:\n          return MapboxGL.CameraModes.Flight;\n\n        case Camera.Mode.Move:\n          return MapboxGL.CameraModes.None;\n\n        case Camera.Mode.Linear:\n          return MapboxGL.CameraModes.Linear;\n\n        default:\n          return MapboxGL.CameraModes.Ease;\n      }\n    }\n  }, {\n    key: \"_getMaxBounds\",\n    value: function _getMaxBounds() {\n      var bounds = this.props.maxBounds;\n\n      if (!bounds || !bounds.ne || !bounds.sw) {\n        return null;\n      }\n\n      return toJSONString(geoUtils.makeLatLngBounds(bounds.ne, bounds.sw));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      var callbacks = {\n        onUserTrackingModeChange: props.onUserTrackingModeChange\n      };\n      return _jsx(RCTMGLCamera, _objectSpread({\n        testID: \"Camera\",\n        ref: \"camera\",\n        followUserLocation: this.props.followUserLocation,\n        followUserMode: this.props.followUserMode,\n        followPitch: this.props.followPitch,\n        followHeading: this.props.followHeading,\n        followZoomLevel: this.props.followZoomLevel,\n        stop: this._createStopConfig(props),\n        maxZoomLevel: this.props.maxZoomLevel,\n        minZoomLevel: this.props.minZoomLevel,\n        maxBounds: this._getMaxBounds(),\n        defaultStop: this._createDefaultCamera()\n      }, callbacks));\n    }\n  }]);\n\n  return Camera;\n}(React.Component);\n\nCamera.propTypes = _objectSpread(_objectSpread(_objectSpread({}, viewPropTypes), {}, {\n  allowUpdates: PropTypes.bool,\n  animationDuration: PropTypes.number,\n  animationMode: PropTypes.oneOf(['flyTo', 'easeTo', 'linearTo', 'moveTo']),\n  defaultSettings: PropTypes.shape(SettingsPropTypes)\n}, SettingsPropTypes), {}, {\n  minZoomLevel: PropTypes.number,\n  maxZoomLevel: PropTypes.number,\n  maxBounds: PropTypes.shape({\n    ne: PropTypes.arrayOf(PropTypes.number).isRequired,\n    sw: PropTypes.arrayOf(PropTypes.number).isRequired\n  }),\n  followUserLocation: PropTypes.bool,\n  followUserMode: PropTypes.oneOf(['normal', 'compass', 'course']),\n  followZoomLevel: PropTypes.number,\n  followPitch: PropTypes.number,\n  followHeading: PropTypes.number,\n  triggerKey: PropTypes.any,\n  onUserTrackingModeChange: PropTypes.func\n});\nCamera.defaultProps = {\n  allowUpdates: true,\n  animationMode: 'easeTo',\n  animationDuration: 2000\n};\nCamera.Mode = {\n  Flight: 'flyTo',\n  Move: 'moveTo',\n  Ease: 'easeTo',\n  Linear: 'linearTo'\n};\nvar RCTMGLCamera = requireNativeComponent(NATIVE_MODULE_NAME, Camera, {\n  nativeOnly: {\n    stop: true\n  }\n});\nCamera.UserTrackingModes = {\n  Follow: 'normal',\n  FollowWithHeading: 'compass',\n  FollowWithCourse: 'course'\n};\nexport default Camera;","map":{"version":3,"sources":["C:/Users/Adith/sp/node_modules/@react-native-mapbox-gl/maps/javascript/components/Camera.js"],"names":["React","PropTypes","requireNativeComponent","toJSONString","viewPropTypes","existenceChange","geoUtils","MapboxGL","NativeModules","MGLModule","NATIVE_MODULE_NAME","SettingsPropTypes","centerCoordinate","arrayOf","number","padding","shape","paddingLeft","paddingRight","paddingTop","paddingBottom","heading","pitch","bounds","ne","isRequired","sw","onUserTrackingModeChange","func","zoomLevel","Camera","nextProps","_handleCameraChange","props","currentCamera","nextCamera","c","n","allowUpdates","hasCameraChanged","_hasCameraChanged","followUserLocation","refs","camera","setNativeProps","followUserMode","followPitch","followHeading","followZoomLevel","maxBounds","_getMaxBounds","minZoomLevel","maxZoomLevel","cameraConfig","undefined","animationMode","animationDuration","boundsChanged","_hasBoundsChanged","centerCoordinateChanged","_hasCenterCoordinateChanged","paddingChanged","_hasPaddingChanged","zoomChanged","_hasNumberChanged","pitchChanged","headingChanged","shouldUpdate","_setCamera","hasDefaultPropsChanged","triggerKey","hasFollowPropsChanged","hasAnimationPropsChanged","hasNavigationConstraintsPropsChanged","cC","nC","isLngDiff","isLatDiff","cB","nB","cP","nP","prev","next","northEastCoordinates","southWestCoordinates","pad","Array","isArray","length","setCamera","Mode","Ease","coordinates","Flight","config","stops","stop","push","_createStopConfig","defaultCamera","defaultSettings","Move","ignoreFollowUserLocation","stopConfig","mode","_getNativeCameraMode","duration","zoom","makePoint","makeLatLngBounds","CameraModes","None","Linear","callbacks","_createDefaultCamera","Component","propTypes","bool","oneOf","any","defaultProps","RCTMGLCamera","nativeOnly","UserTrackingModes","Follow","FollowWithHeading","FollowWithCourse"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {NativeModules, requireNativeComponent} from 'react-native';\n\nimport {toJSONString, viewPropTypes, existenceChange} from '../utils';\nimport * as geoUtils from '../utils/geoUtils';\n\nconst MapboxGL = NativeModules.MGLModule;\n\nexport const NATIVE_MODULE_NAME = 'RCTMGLCamera';\n\nconst SettingsPropTypes = {\n  /**\n   * Center coordinate on map [lng, lat]\n   */\n  centerCoordinate: PropTypes.arrayOf(PropTypes.number),\n\n  /**\n   * Padding around edges of map in points\n   */\n  padding: PropTypes.shape({\n    /**\n     * Left padding in points\n     */\n    paddingLeft: PropTypes.number,\n\n    /**\n     * Right padding in points\n     */\n    paddingRight: PropTypes.number,\n\n    /**\n     * Top padding in points\n     */\n    paddingTop: PropTypes.number,\n\n    /**\n     * Bottom padding in points\n     */\n    paddingBottom: PropTypes.number,\n  }),\n\n  /**\n   * Heading on map\n   */\n  heading: PropTypes.number,\n\n  /**\n   * Pitch on map\n   */\n  pitch: PropTypes.number,\n\n  /**\n   * Represents a rectangle in geographical coordinates marking the visible area of the map.\n   * The `bounds.padding*` properties are deprecated; use root `padding` property instead.\n   */\n  bounds: PropTypes.shape({\n    /**\n     * North east coordinate of bound\n     */\n    ne: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n    /**\n     * South west coordinate of bound\n     */\n    sw: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n    /**\n     * Left padding in points (deprecated; use root `padding` property instead)\n     */\n    paddingLeft: PropTypes.number,\n\n    /**\n     * Right padding in points (deprecated; use root `padding` property instead)\n     */\n    paddingRight: PropTypes.number,\n\n    /**\n     * Top padding in points (deprecated; use root `padding` property instead)\n     */\n    paddingTop: PropTypes.number,\n\n    /**\n     * Bottom padding in points (deprecated; use root `padding` property instead)\n     */\n    paddingBottom: PropTypes.number,\n  }),\n\n  /**\n   * Callback that is triggered on user tracking mode changes\n   */\n  onUserTrackingModeChange: PropTypes.func,\n\n  /**\n   * Zoom level of the map\n   */\n  zoomLevel: PropTypes.number,\n};\n\nclass Camera extends React.Component {\n  static propTypes = {\n    ...viewPropTypes,\n\n    /**\n     * If false, the camera will not send any props to the native module. Intended to be used to prevent unnecessary tile fetching and improve performance when the map is not visible. Defaults to true.\n     */\n    allowUpdates: PropTypes.bool,\n\n    /**\n     * The duration a camera update takes (in ms)\n     */\n    animationDuration: PropTypes.number,\n\n    /**\n     * The animationstyle when the camara updates. One of: `flyTo`, `easeTo`, `linearTo`, `moveTo`\n     */\n    animationMode: PropTypes.oneOf(['flyTo', 'easeTo', 'linearTo', 'moveTo']),\n\n    /**\n     * Default view settings applied on camera\n     */\n    defaultSettings: PropTypes.shape(SettingsPropTypes),\n\n    // normal - view settings\n    ...SettingsPropTypes,\n\n    /**\n     * The minimun zoom level of the map\n     */\n    minZoomLevel: PropTypes.number,\n\n    /**\n     * The maximun zoom level of the map\n     */\n    maxZoomLevel: PropTypes.number,\n\n    /**\n     * Restrict map panning so that the center is within these bounds\n     */\n    maxBounds: PropTypes.shape({\n      /**\n       * northEastCoordinates - North east coordinate of bound\n       */\n      ne: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n      /**\n       * southWestCoordinates - South west coordinate of bound\n       */\n      sw: PropTypes.arrayOf(PropTypes.number).isRequired,\n    }),\n\n    /**\n     * Should the map orientation follow the user's.\n     */\n    followUserLocation: PropTypes.bool,\n\n    /**\n     * The mode used to track the user location on the map. One of; \"normal\", \"compass\", \"course\". Each mode string is also available as a member on the `MapboxGL.UserTrackingModes` object. `Follow` (normal), `FollowWithHeading` (compass), `FollowWithCourse` (course). NOTE: `followUserLocation` must be set to `true` for any of the modes to take effect. [Example](../example/src/examples/SetUserTrackingModes.js)\n     */\n    followUserMode: PropTypes.oneOf(['normal', 'compass', 'course']),\n\n    /**\n     * The zoomLevel on map while followUserLocation is set to `true`\n     */\n    followZoomLevel: PropTypes.number,\n\n    /**\n     * The pitch on map while followUserLocation is set to `true`\n     */\n    followPitch: PropTypes.number,\n\n    /**\n     * The heading on map while followUserLocation is set to `true`\n     */\n    followHeading: PropTypes.number,\n\n    /**\n     * Manually update the camera - helpful for when props did not update, however you still want the camera to move\n     */\n    triggerKey: PropTypes.any,\n\n    // Triggered when the\n    onUserTrackingModeChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    allowUpdates: true,\n    animationMode: 'easeTo',\n    animationDuration: 2000,\n  };\n\n  static Mode = {\n    Flight: 'flyTo',\n    Move: 'moveTo',\n    Ease: 'easeTo',\n    Linear: 'linearTo',\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this._handleCameraChange(this.props, nextProps);\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  _handleCameraChange(currentCamera, nextCamera) {\n    const c = currentCamera;\n    const n = nextCamera;\n\n    if (!n.allowUpdates) {\n      return;\n    }\n\n    const hasCameraChanged = this._hasCameraChanged(c, n);\n    if (!hasCameraChanged) {\n      return;\n    }\n\n    if (c.followUserLocation && !n.followUserLocation) {\n      this.refs.camera.setNativeProps({followUserLocation: false});\n      return;\n    }\n    if (!c.followUserLocation && n.followUserLocation) {\n      this.refs.camera.setNativeProps({followUserLocation: true});\n    }\n\n    if (n.followUserLocation) {\n      this.refs.camera.setNativeProps({\n        followUserMode: n.followUserMode,\n        followPitch: n.followPitch || n.pitch,\n        followHeading: n.followHeading || n.heading,\n        followZoomLevel: n.followZoomLevel || n.zoomLevel,\n      });\n      return;\n    }\n\n    if (n.maxBounds) {\n      this.refs.camera.setNativeProps({\n        maxBounds: this._getMaxBounds(),\n      });\n    }\n    if (n.minZoomLevel) {\n      this.refs.camera.setNativeProps({\n        minZoomLevel: this.props.minZoomLevel,\n      });\n    }\n    if (n.maxZoomLevel) {\n      this.refs.camera.setNativeProps({\n        maxZoomLevel: this.props.maxZoomLevel,\n      });\n    }\n\n    const cameraConfig = {\n      bounds: undefined,\n      centerCoordinate: undefined,\n      padding: n.padding,\n      zoomLevel: n.zoomLevel,\n      pitch: n.pitch,\n      heading: n.heading,\n      animationMode: n.animationMode,\n      animationDuration: n.animationDuration,\n    };\n\n    const boundsChanged = this._hasBoundsChanged(c.bounds, n.bounds);\n    const centerCoordinateChanged = this._hasCenterCoordinateChanged(\n      c.centerCoordinate,\n      n.centerCoordinate,\n    );\n    const paddingChanged = this._hasPaddingChanged(c.padding, n.padding);\n    const zoomChanged = this._hasNumberChanged(c.zoomLevel, n.zoomLevel);\n    const pitchChanged = this._hasNumberChanged(c.pitch, n.pitch);\n    const headingChanged = this._hasNumberChanged(c.heading, n.heading);\n\n    let shouldUpdate = false;\n\n    if (n.bounds && boundsChanged) {\n      cameraConfig.bounds = n.bounds;\n      shouldUpdate = true;\n    } else if (n.centerCoordinate && centerCoordinateChanged) {\n      cameraConfig.centerCoordinate = n.centerCoordinate;\n      shouldUpdate = true;\n    }\n\n    if (paddingChanged || zoomChanged || pitchChanged || headingChanged) {\n      shouldUpdate = true;\n    }\n\n    if (shouldUpdate) {\n      this._setCamera(cameraConfig);\n    }\n  }\n\n  _hasCameraChanged(currentCamera, nextCamera) {\n    const c = currentCamera;\n    const n = nextCamera;\n\n    const hasDefaultPropsChanged =\n      c.heading !== n.heading ||\n      this._hasCenterCoordinateChanged(\n        c.centerCoordinate,\n        n.centerCoordinate,\n      ) ||\n      this._hasBoundsChanged(c.bounds, n.bounds) ||\n      this._hasPaddingChanged(c.padding, n.padding) ||\n      c.pitch !== n.pitch ||\n      c.zoomLevel !== n.zoomLevel ||\n      c.triggerKey !== n.triggerKey;\n\n    const hasFollowPropsChanged =\n      c.followUserLocation !== n.followUserLocation ||\n      c.followUserMode !== n.followUserMode ||\n      c.followZoomLevel !== n.followZoomLevel ||\n      c.followHeading !== n.followHeading ||\n      c.followPitch !== n.followPitch;\n\n    const hasAnimationPropsChanged =\n      c.animationMode !== n.animationMode ||\n      c.animationDuration !== n.animationDuration;\n\n    const hasNavigationConstraintsPropsChanged =\n      this._hasBoundsChanged(c.maxBounds, n.maxBounds) ||\n      c.minZoomLevel !== n.minZoomLevel ||\n      c.maxZoomLevel !== n.maxZoomLevel;\n\n    return (\n      hasDefaultPropsChanged ||\n      hasFollowPropsChanged ||\n      hasAnimationPropsChanged ||\n      hasNavigationConstraintsPropsChanged\n    );\n  }\n\n  _hasCenterCoordinateChanged(cC, nC) {\n    if (!cC && !nC) {\n      return false;\n    }\n\n    if (existenceChange(cC, nC)) {\n      return true;\n    }\n\n    const isLngDiff = cC[0] !== nC[0];\n    const isLatDiff = cC[1] !== nC[1];\n    return isLngDiff || isLatDiff;\n  }\n\n  _hasBoundsChanged(cB, nB) {\n    if (!cB && !nB) {\n      return false;\n    }\n\n    if (existenceChange(cB, nB)) {\n      return true;\n    }\n\n    return (\n      cB.ne[0] !== nB.ne[0] ||\n      cB.ne[1] !== nB.ne[1] ||\n      cB.sw[0] !== nB.sw[0] ||\n      cB.sw[1] !== nB.sw[1] ||\n      cB.paddingTop !== nB.paddingTop ||\n      cB.paddingLeft !== nB.paddingLeft ||\n      cB.paddingRight !== nB.paddingRight ||\n      cB.paddingBottom !== nB.paddingBottom\n    );\n  }\n\n  _hasPaddingChanged(cP, nP) {\n    if (!cP && !nP) {\n      return false;\n    }\n\n    if (existenceChange(cP, nP)) {\n      return true;\n    }\n\n    return (\n      cP.paddingTop !== nP.paddingTop ||\n      cP.paddingLeft !== nP.paddingLeft ||\n      cP.paddingRight !== nP.paddingRight ||\n      cP.paddingBottom !== nP.paddingBottom\n    );\n  }\n\n  _hasNumberChanged(prev, next) {\n    if (existenceChange(prev, next)) {\n      return true;\n    }\n\n    if (!prev && !next) {\n      return false;\n    }\n\n    return prev !== next;\n  }\n\n  /**\n   * Map camera transitions to fit provided bounds\n   *\n   * @example\n   * this.camera.fitBounds([lng, lat], [lng, lat])\n   * this.camera.fitBounds([lng, lat], [lng, lat], 20, 1000) // padding for all sides\n   * this.camera.fitBounds([lng, lat], [lng, lat], [verticalPadding, horizontalPadding], 1000)\n   * this.camera.fitBounds([lng, lat], [lng, lat], [top, right, bottom, left], 1000)\n   *\n   * @param {Array<Number>} northEastCoordinates - North east coordinate of bound\n   * @param {Array<Number>} southWestCoordinates - South west coordinate of bound\n   * @param {Number=} padding - Camera padding for bound\n   * @param {Number=} animationDuration - Duration of camera animation\n   * @return {void}\n   */\n  fitBounds(\n    northEastCoordinates,\n    southWestCoordinates,\n    padding = 0,\n    animationDuration = 0.0,\n  ) {\n    const pad = {\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingTop: 0,\n      paddingBottom: 0,\n    };\n\n    if (Array.isArray(padding)) {\n      if (padding.length === 2) {\n        pad.paddingTop = padding[0];\n        pad.paddingBottom = padding[0];\n        pad.paddingLeft = padding[1];\n        pad.paddingRight = padding[1];\n      } else if (padding.length === 4) {\n        pad.paddingTop = padding[0];\n        pad.paddingRight = padding[1];\n        pad.paddingBottom = padding[2];\n        pad.paddingLeft = padding[3];\n      }\n    } else {\n      pad.paddingLeft = padding;\n      pad.paddingRight = padding;\n      pad.paddingTop = padding;\n      pad.paddingBottom = padding;\n    }\n\n    return this.setCamera({\n      bounds: {\n        ne: northEastCoordinates,\n        sw: southWestCoordinates,\n      },\n      padding: pad,\n      animationDuration,\n      animationMode: Camera.Mode.Ease,\n    });\n  }\n\n  /**\n   * Map camera will fly to new coordinate\n   *\n   * @example\n   * this.camera.flyTo([lng, lat])\n   * this.camera.flyTo([lng, lat], 12000)\n   *\n   *  @param {Array<Number>} coordinates - Coordinates that map camera will jump too\n   *  @param {Number=} animationDuration - Duration of camera animation\n   *  @return {void}\n   */\n  flyTo(coordinates, animationDuration = 2000) {\n    return this.setCamera({\n      centerCoordinate: coordinates,\n      animationDuration,\n      animationMode: Camera.Mode.Flight,\n    });\n  }\n\n  /**\n   * Map camera will move to new coordinate at the same zoom level\n   *\n   * @example\n   * this.camera.moveTo([lng, lat], 200) // eases camera to new location based on duration\n   * this.camera.moveTo([lng, lat]) // snaps camera to new location without any easing\n   *\n   *  @param {Array<Number>} coordinates - Coordinates that map camera will move too\n   *  @param {Number=} animationDuration - Duration of camera animation\n   *  @return {void}\n   */\n  moveTo(coordinates, animationDuration = 0) {\n    return this.setCamera({\n      centerCoordinate: coordinates,\n      animationDuration,\n    });\n  }\n\n  /**\n   * Map camera will zoom to specified level\n   *\n   * @example\n   * this.camera.zoomTo(16)\n   * this.camera.zoomTo(16, 100)\n   *\n   * @param {Number} zoomLevel - Zoom level that the map camera will animate too\n   * @param {Number=} animationDuration - Duration of camera animation\n   * @return {void}\n   */\n  zoomTo(zoomLevel, animationDuration = 2000) {\n    return this.setCamera({\n      zoomLevel,\n      animationDuration,\n      animationMode: Camera.Mode.Flight,\n    });\n  }\n\n  /**\n   * Map camera will perform updates based on provided config. Advanced use only!\n   *\n   * @example\n   * this.camera.setCamera({\n   *   centerCoordinate: [lng, lat],\n   *   zoomLevel: 16,\n   *   animationDuration: 2000,\n   * })\n   *\n   * this.camera.setCamera({\n   *   stops: [\n   *     { pitch: 45, animationDuration: 200 },\n   *     { heading: 180, animationDuration: 300 },\n   *   ]\n   * })\n   *\n   *  @param {Object} config - Camera configuration\n   */\n  setCamera(config = {}) {\n    this._setCamera(config);\n  }\n\n  _setCamera(config = {}) {\n    let cameraConfig = {};\n\n    if (config.stops) {\n      cameraConfig.stops = [];\n\n      for (const stop of config.stops) {\n        cameraConfig.stops.push(this._createStopConfig(stop));\n      }\n    } else {\n      cameraConfig = this._createStopConfig(config);\n    }\n\n    this.refs.camera.setNativeProps({stop: cameraConfig});\n  }\n\n  _createDefaultCamera() {\n    if (this.defaultCamera) {\n      return this.defaultCamera;\n    }\n    if (!this.props.defaultSettings) {\n      return null;\n    }\n\n    this.defaultCamera = this._createStopConfig(\n      {\n        ...this.props.defaultSettings,\n        animationMode: Camera.Mode.Move,\n      },\n      true,\n    );\n    return this.defaultCamera;\n  }\n\n  _createStopConfig(config = {}, ignoreFollowUserLocation = false) {\n    if (this.props.followUserLocation && !ignoreFollowUserLocation) {\n      return null;\n    }\n\n    const stopConfig = {\n      mode: this._getNativeCameraMode(config),\n      pitch: config.pitch,\n      heading: config.heading,\n      duration: config.animationDuration || 0,\n      zoom: config.zoomLevel,\n    };\n\n    if (config.centerCoordinate) {\n      stopConfig.centerCoordinate = toJSONString(\n        geoUtils.makePoint(config.centerCoordinate),\n      );\n    }\n\n    if (config.bounds && config.bounds.ne && config.bounds.sw) {\n      const {ne, sw} = config.bounds;\n      stopConfig.bounds = toJSONString(geoUtils.makeLatLngBounds(ne, sw));\n    }\n\n    stopConfig.paddingTop =\n      config.padding?.paddingTop || config.bounds?.paddingTop || 0;\n    stopConfig.paddingRight =\n      config.padding?.paddingRight || config.bounds?.paddingRight || 0;\n    stopConfig.paddingBottom =\n      config.padding?.paddingBottom || config.bounds?.paddingBottom || 0;\n    stopConfig.paddingLeft =\n      config.padding?.paddingLeft || config.bounds?.paddingLeft || 0;\n\n    return stopConfig;\n  }\n\n  _getNativeCameraMode(config) {\n    switch (config.animationMode) {\n      case Camera.Mode.Flight:\n        return MapboxGL.CameraModes.Flight;\n      case Camera.Mode.Move:\n        return MapboxGL.CameraModes.None;\n      case Camera.Mode.Linear:\n        return MapboxGL.CameraModes.Linear;\n      default:\n        return MapboxGL.CameraModes.Ease;\n    }\n  }\n\n  _getMaxBounds() {\n    const bounds = this.props.maxBounds;\n    if (!bounds || !bounds.ne || !bounds.sw) {\n      return null;\n    }\n    return toJSONString(geoUtils.makeLatLngBounds(bounds.ne, bounds.sw));\n  }\n\n  render() {\n    const props = Object.assign({}, this.props);\n\n    const callbacks = {\n      onUserTrackingModeChange: props.onUserTrackingModeChange,\n    };\n\n    return (\n      <RCTMGLCamera\n        testID=\"Camera\"\n        ref=\"camera\"\n        followUserLocation={this.props.followUserLocation}\n        followUserMode={this.props.followUserMode}\n        followPitch={this.props.followPitch}\n        followHeading={this.props.followHeading}\n        followZoomLevel={this.props.followZoomLevel}\n        stop={this._createStopConfig(props)}\n        maxZoomLevel={this.props.maxZoomLevel}\n        minZoomLevel={this.props.minZoomLevel}\n        maxBounds={this._getMaxBounds()}\n        defaultStop={this._createDefaultCamera()}\n        {...callbacks}\n      />\n    );\n  }\n}\n\nconst RCTMGLCamera = requireNativeComponent(NATIVE_MODULE_NAME, Camera, {\n  nativeOnly: {\n    stop: true,\n  },\n});\n\nCamera.UserTrackingModes = {\n  Follow: 'normal',\n  FollowWithHeading: 'compass',\n  FollowWithCourse: 'course',\n};\n\nexport default Camera;\n"]},"metadata":{},"sourceType":"module"}