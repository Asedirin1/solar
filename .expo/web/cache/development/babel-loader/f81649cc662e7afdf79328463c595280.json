{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport MapView, { Heatmap } from 'react-native-maps';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useState } from 'react/cjs/react.development';\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function heatMap() {\n  var _useState = useState(\"WA\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      sstate = _useState2[0],\n      setState = _useState2[1];\n\n  var lat = 0;\n  var lng = 0;\n  getcoords();\n  var state = {\n    initialPosition: {\n      latitude: 37.0902,\n      longitude: -95.7129,\n      latitudeDelta: 57,\n      longitudeDelta: 57\n    }\n  };\n  points = [{\n    latitude: 40.7828,\n    longitude: -74.0065,\n    weight: 1\n  }, {\n    latitude: 41.7121,\n    longitude: -74.0042,\n    weight: 1\n  }, {\n    latitude: 40.7102,\n    longitude: -75.0060,\n    weight: 1\n  }, {\n    latitude: 40.7123,\n    longitude: -74.0052,\n    weight: 1\n  }, {\n    latitude: 40.7032,\n    longitude: -74.0042,\n    weight: 1\n  }, {\n    latitude: 40.7198,\n    longitude: -74.0024,\n    weight: 1\n  }, {\n    latitude: 41.7223,\n    longitude: -74.0053,\n    weight: 1\n  }, {\n    latitude: 40.7181,\n    longitude: -74.0042,\n    weight: 1\n  }, {\n    latitude: 40.7124,\n    longitude: -74.0023,\n    weight: 1\n  }, {\n    latitude: 40.7648,\n    longitude: -74.0012,\n    weight: 1\n  }, {\n    latitude: 41.7128,\n    longitude: -74.0027,\n    weight: 1\n  }, {\n    latitude: 40.7223,\n    longitude: -74.0153,\n    weight: 1\n  }, {\n    latitude: 40.7193,\n    longitude: -74.0052,\n    weight: 1\n  }, {\n    latitude: 40.7241,\n    longitude: -75.0013,\n    weight: 1\n  }, {\n    latitude: 41.7518,\n    longitude: -74.0085,\n    weight: 1\n  }, {\n    latitude: 40.7599,\n    longitude: -74.0093,\n    weight: 1\n  }, {\n    latitude: 41.7523,\n    longitude: -74.0021,\n    weight: 1\n  }, {\n    latitude: 40.7342,\n    longitude: -74.0152,\n    weight: 1\n  }, {\n    latitude: 40.7484,\n    longitude: -75.0042,\n    weight: 1\n  }, {\n    latitude: 40.7929,\n    longitude: -75.0023,\n    weight: 1\n  }, {\n    latitude: 40.7292,\n    longitude: -74.0013,\n    weight: 1\n  }, {\n    latitude: 40.7940,\n    longitude: -74.0048,\n    weight: 1\n  }, {\n    latitude: 40.7874,\n    longitude: -74.0052,\n    weight: 1\n  }, {\n    latitude: 40.7824,\n    longitude: -74.0024,\n    weight: 1\n  }, {\n    latitude: 40.7232,\n    longitude: -74.0094,\n    weight: 1\n  }, {\n    latitude: 41.7342,\n    longitude: -74.0152,\n    weight: 1\n  }, {\n    latitude: 41.7484,\n    longitude: -74.0012,\n    weight: 1\n  }, {\n    latitude: 41.7929,\n    longitude: -74.0073,\n    weight: 1\n  }, {\n    latitude: 41.7292,\n    longitude: -74.0013,\n    weight: 1\n  }, {\n    latitude: 41.7940,\n    longitude: -74.0058,\n    weight: 1\n  }, {\n    latitude: 41.7874,\n    longitude: -74.0352,\n    weight: 1\n  }, {\n    latitude: 41.7824,\n    longitude: -74.0024,\n    weight: 1\n  }, {\n    latitude: 41.7232,\n    longitude: -74.0094,\n    weight: 1\n  }, {\n    latitude: 41.0342,\n    longitude: -75.0152,\n    weight: 1\n  }, {\n    latitude: 41.0484,\n    longitude: -75.0012,\n    weight: 1\n  }, {\n    latitude: 41.0929,\n    longitude: -75.0073,\n    weight: 1\n  }, {\n    latitude: 41.0292,\n    longitude: -74.0013,\n    weight: 1\n  }, {\n    latitude: 41.0940,\n    longitude: -74.0068,\n    weight: 1\n  }, {\n    latitude: 41.0874,\n    longitude: -74.0052,\n    weight: 1\n  }, {\n    latitude: 41.0824,\n    longitude: -74.0024,\n    weight: 1\n  }, {\n    latitude: 41.0232,\n    longitude: -74.0014,\n    weight: 1\n  }];\n  console.log(lat);\n  console.log(lng);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(MapView, {\n      provider: \"google\",\n      style: styles.map,\n      initialRegion: state.initialPosition,\n      children: _jsx(Heatmap, {\n        points: points,\n        radius: 40,\n        opacity: 1,\n        gradient: {\n          colors: [\"black\", \"purple\", \"red\", \"orange\", \"white\"],\n          startPoints: Platform.OS === 'ios' ? [0.01, 0.04, 0.1, 0.45, 0.5] : [0.1, 0.25, 0.5, 0.75, 1],\n          colorMapSize: 2000\n        }\n      })\n    })\n  });\n\n  function getcoords() {\n    var options = {\n      method: 'GET',\n      url: 'http://open.mapquestapi.com/geocoding/v1/address?key=saD6wA8skX1MAzw7nKIyqh9LhoxZ0a46&location=' + sstate\n    };\n    axios.request(options).then(function (response) {\n      console.log(response.data.results[0].locations[0].latLng.lat);\n      responses = response;\n      lat = response.data.results[0].locations[0].latLng.lat;\n      lng = response.data.results[0].locations[0].latLng.lng;\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  map: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height\n  }\n});","map":{"version":3,"sources":["C:/Users/Adith/sp/screens/heatMap.js"],"names":["React","MapView","Heatmap","useState","axios","heatMap","sstate","setState","lat","lng","getcoords","state","initialPosition","latitude","longitude","latitudeDelta","longitudeDelta","points","weight","console","log","styles","container","map","colors","startPoints","Platform","OS","colorMapSize","options","method","url","request","then","response","data","results","locations","latLng","responses","catch","error","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","Dimensions","get","height"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport MapView, { Heatmap } from 'react-native-maps';\r\nimport { StyleSheet, Text, View, Dimensions } from 'react-native';\r\n//import { points } from '../points';\r\nimport { useState } from 'react/cjs/react.development';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport function heatMap() {\r\n  const [sstate, setState] = useState(\"WA\")\r\n  var lat = 0\r\n  var lng = 0\r\n  \r\n  getcoords()\r\n  \r\n  const state = {\r\n    initialPosition: {\r\n      latitude: 37.0902,\r\n      longitude: -95.7129,\r\n      latitudeDelta: 57,\r\n      longitudeDelta: 57\r\n    }\r\n  }\r\n  points = [\r\n    { latitude: 40.7828, longitude: -74.0065, weight: 1 },\r\n    { latitude: 41.7121, longitude: -74.0042, weight: 1 },\r\n    { latitude: 40.7102, longitude: -75.0060, weight: 1 },\r\n    { latitude: 40.7123, longitude: -74.0052, weight: 1 },\r\n    { latitude: 40.7032, longitude: -74.0042, weight: 1 },\r\n    { latitude: 40.7198, longitude: -74.0024, weight: 1 },\r\n    { latitude: 41.7223, longitude: -74.0053, weight: 1 },\r\n    { latitude: 40.7181, longitude: -74.0042, weight: 1 },\r\n    { latitude: 40.7124, longitude: -74.0023, weight: 1 },\r\n    { latitude: 40.7648, longitude: -74.0012, weight: 1 },\r\n    { latitude: 41.7128, longitude: -74.0027, weight: 1 },\r\n    { latitude: 40.7223, longitude: -74.0153, weight: 1 },\r\n    { latitude: 40.7193, longitude: -74.0052, weight: 1 },\r\n    { latitude: 40.7241, longitude: -75.0013, weight: 1 },\r\n    { latitude: 41.7518, longitude: -74.0085, weight: 1 },\r\n    { latitude: 40.7599, longitude: -74.0093, weight: 1 },\r\n    { latitude: 41.7523, longitude: -74.0021, weight: 1 },\r\n    { latitude: 40.7342, longitude: -74.0152, weight: 1 },\r\n    { latitude: 40.7484, longitude: -75.0042, weight: 1 },\r\n    { latitude: 40.7929, longitude: -75.0023, weight: 1 },\r\n    { latitude: 40.7292, longitude: -74.0013, weight: 1 },\r\n    { latitude: 40.7940, longitude: -74.0048, weight: 1 },\r\n    { latitude: 40.7874, longitude: -74.0052, weight: 1 },\r\n    { latitude: 40.7824, longitude: -74.0024, weight: 1 },\r\n    { latitude: 40.7232, longitude: -74.0094, weight: 1 },\r\n    { latitude: 41.7342, longitude: -74.0152, weight: 1 },\r\n    { latitude: 41.7484, longitude: -74.0012, weight: 1 },\r\n    { latitude: 41.7929, longitude: -74.0073, weight: 1 },\r\n    { latitude: 41.7292, longitude: -74.0013, weight: 1 },\r\n    { latitude: 41.7940, longitude: -74.0058, weight: 1 },\r\n    { latitude: 41.7874, longitude: -74.0352, weight: 1 },\r\n    { latitude: 41.7824, longitude: -74.0024, weight: 1 },\r\n    { latitude: 41.7232, longitude: -74.0094, weight: 1 },\r\n    { latitude: 41.0342, longitude: -75.0152, weight: 1 },\r\n    { latitude: 41.0484, longitude: -75.0012, weight: 1 },\r\n    { latitude: 41.0929, longitude: -75.0073, weight: 1 },\r\n    { latitude: 41.0292, longitude: -74.0013, weight: 1 },\r\n    { latitude: 41.0940, longitude: -74.0068, weight: 1 },\r\n    { latitude: 41.0874, longitude: -74.0052, weight: 1 },\r\n    { latitude: 41.0824, longitude: -74.0024, weight: 1 },\r\n    { latitude: 41.0232, longitude: -74.0014, weight: 1 }\r\n  ];\r\n  console.log(lat)\r\n  console.log(lng)\r\n  \r\n    return (\r\n      <View style={styles.container}>\r\n\r\n        <MapView\r\n          provider=\"google\"\r\n          \r\n          style={styles.map}\r\n          initialRegion={state.initialPosition}>\r\n          <Heatmap\r\n            points={points}\r\n            radius={40}\r\n            opacity={1}\r\n            gradient={{\r\n              colors: [\"black\", \"purple\", \"red\", \"orange\", \"white\"],\r\n              startPoints: Platform.OS === 'ios' ? [0.01, 0.04, 0.1, 0.45, 0.5] :\r\n                [0.1, 0.25, 0.5, 0.75, 1],\r\n              colorMapSize: 2000\r\n            }}\r\n          >\r\n          </Heatmap>\r\n        </MapView>\r\n      </View>\r\n    );\r\n    function getcoords() {\r\n        \r\n  \r\n  \r\n      var options = {\r\n        method: 'GET',\r\n        url: 'http://open.mapquestapi.com/geocoding/v1/address?key=saD6wA8skX1MAzw7nKIyqh9LhoxZ0a46&location=' + sstate,\r\n        \r\n      };\r\n    \r\n      axios.request(options).then(function (response) {\r\n          console.log(response.data.results[0].locations[0].latLng.lat)\r\n          responses = response\r\n          lat = response.data.results[0].locations[0].latLng.lat\r\n          lng = response.data.results[0].locations[0].latLng.lng\r\n    \r\n    \r\n      }).catch(function (error) {\r\n        console.error(error);\r\n      });\r\n    }\r\n  \r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  map: {\r\n    width: Dimensions.get('window').width,\r\n    height: Dimensions.get('window').height,\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}