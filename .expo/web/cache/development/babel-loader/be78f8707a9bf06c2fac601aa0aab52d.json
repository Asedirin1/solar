{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport MapView, { Heatmap } from 'react-native-maps';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useState } from 'react/cjs/react.development';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function heatMap() {\n  var _useState = useState(\"WA\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      sstate = _useState2[0],\n      setState = _useState2[1];\n\n  var coords = getcoords();\n  var lat = 0;\n  var lng = 0;\n  var DNI = getDNI();\n  getcoords();\n  var pointss = [];\n\n  if (getData() == null) {\n    storeData(pointss);\n  } else {\n    pointss = getData();\n  }\n\n  var storeData = function storeData(value) {\n    return _regeneratorRuntime.async(function storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('points', value));\n\n          case 3:\n            _context.next = 7;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var getData = function getData() {\n    var array;\n    return _regeneratorRuntime.async(function getData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@storage_Key'));\n\n          case 3:\n            array = _context2.sent;\n            return _context2.abrupt(\"return\", array);\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  for (var i = 0; i < 1; i++) {\n    getDNI();\n    var Obj = {};\n    Obj['latitude'] = lat;\n    Obj['longitude'] = lng;\n    Obj['weight'] = DNI;\n    pointss.push(Obj);\n    lat += 1;\n    lng += -1;\n  }\n\n  console.log(pointss);\n  var state = {\n    initialPosition: {\n      latitude: 37.0902,\n      longitude: -95.7129,\n      latitudeDelta: 57,\n      longitudeDelta: 57\n    }\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(MapView, {\n      provider: \"google\",\n      style: styles.map,\n      initialRegion: state.initialPosition,\n      children: _jsx(Heatmap, {\n        points: pointss,\n        radius: 40,\n        opacity: 1,\n        gradient: {\n          colors: [\"black\", \"purple\", \"red\", \"orange\", \"white\"],\n          startPoints: Platform.OS === 'ios' ? [0.01, 0.04, 0.1, 0.45, 0.5] : [0.1, 0.25, 0.5, 0.75, 1],\n          colorMapSize: 2000\n        }\n      })\n    })\n  });\n\n  function getDNI() {\n    var options = {\n      method: 'GET',\n      url: 'https://developer.nrel.gov/api/solar/solar_resource/v1.json?api_key=0mnx2OSLok4UiEoaajb0fh4j2YoFOznGfGHZS78j&lat=' + lat + '&lon=' + lng\n    };\n    console.log(options.url);\n    axios.request(options).then(function (response) {\n      return response;\n    }).catch(function (error) {\n      console.error(error);\n    });\n    console.log(lat);\n  }\n\n  function getcoords() {\n    var options = {\n      method: 'GET',\n      url: 'http://open.mapquestapi.com/geocoding/v1/address?key=saD6wA8skX1MAzw7nKIyqh9LhoxZ0a46&location=' + sstate\n    };\n    axios.request(options).then(function (response) {\n      return response;\n      lat = response.data.results[0].locations[0].latLng.lat;\n      lng = response.data.results[0].locations[0].latLng.lng;\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  map: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height\n  }\n});","map":{"version":3,"sources":["C:/Users/Adith/sp/screens/heatMap.js"],"names":["React","MapView","Heatmap","useState","axios","AsyncStorage","heatMap","sstate","setState","coords","getcoords","lat","lng","DNI","getDNI","pointss","getData","storeData","value","setItem","getItem","array","i","Obj","push","console","log","state","initialPosition","latitude","longitude","latitudeDelta","longitudeDelta","styles","container","map","colors","startPoints","Platform","OS","colorMapSize","options","method","url","request","then","response","catch","error","data","results","locations","latLng","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","Dimensions","get","height"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport MapView, { Heatmap } from 'react-native-maps';\r\nimport { StyleSheet, Text, View, Dimensions } from 'react-native';\r\n//import { points } from '../points';\r\nimport { useState } from 'react/cjs/react.development';\r\nimport axios from 'axios';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n\r\n\r\nexport function heatMap() {\r\n  const [sstate, setState] = useState(\"WA\")\r\n  var coords = getcoords()\r\n  var lat = 0\r\n  var lng = 0\r\n  var DNI = getDNI()\r\n  getcoords()\r\n  var pointss = [];\r\n  if (getData() == null) {\r\n    storeData(pointss)\r\n  }\r\n  else {\r\n    pointss = getData();\r\n  }\r\n  const storeData = async (value) => {\r\n    try {\r\n      \r\n      await AsyncStorage.setItem('points', value)\r\n    } catch (e) {\r\n      \r\n    }\r\n  }\r\n  \r\n \r\nconst getData = async () => {\r\n  try {\r\n    const array = await AsyncStorage.getItem('@storage_Key')\r\n    return array;\r\n  } catch(e) {\r\n    \r\n  }\r\n}\r\n  for (let i = 0; i < 1; i++) {\r\n      getDNI();\r\n      \r\n      var Obj = {};\r\n      Obj['latitude'] = lat;\r\n      Obj['longitude'] = lng;\r\n      Obj['weight'] = DNI;\r\n      pointss.push(Obj);\r\n      lat+=1\r\n      lng+=-1\r\n  }\r\n  console.log(pointss)\r\n  const state = {\r\n    initialPosition: {\r\n      latitude: 37.0902,\r\n      longitude: -95.7129,\r\n      latitudeDelta: 57,\r\n      longitudeDelta: 57\r\n    }\r\n  }\r\n  \r\n  \r\n  \r\n    return (\r\n      <View style={styles.container}>\r\n\r\n        <MapView\r\n          provider=\"google\"\r\n          \r\n          style={styles.map}\r\n          initialRegion={state.initialPosition}>\r\n          <Heatmap\r\n            points={pointss}\r\n            radius={40}\r\n            opacity={1}\r\n            gradient={{\r\n              colors: [\"black\", \"purple\", \"red\", \"orange\", \"white\"],\r\n              startPoints: Platform.OS === 'ios' ? [0.01, 0.04, 0.1, 0.45, 0.5] :\r\n                [0.1, 0.25, 0.5, 0.75, 1],\r\n              colorMapSize: 2000\r\n            }}\r\n          >\r\n          </Heatmap>\r\n        </MapView>\r\n      </View>\r\n    );\r\n\r\n    \r\n    function getDNI() {\r\n        \r\n      var options = {\r\n        method: 'GET',\r\n        url: 'https://developer.nrel.gov/api/solar/solar_resource/v1.json?api_key=0mnx2OSLok4UiEoaajb0fh4j2YoFOznGfGHZS78j&lat=' +lat + '&lon=' + lng,\r\n        \r\n      };\r\n      console.log(options.url)\r\n      axios.request(options).then(function (response) {\r\n          \r\n        return response\r\n        \r\n  \r\n  \r\n      }).catch(function (error) {\r\n        console.error(error);\r\n      });\r\n      \r\n      console.log(lat)\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n  function getcoords() {\r\n      \r\n\r\n\r\n    var options = {\r\n      method: 'GET',\r\n      url: 'http://open.mapquestapi.com/geocoding/v1/address?key=saD6wA8skX1MAzw7nKIyqh9LhoxZ0a46&location=' + sstate,\r\n      \r\n    };\r\n  \r\n    axios.request(options).then(function (response) {\r\n        return response\r\n        \r\n        lat = response.data.results[0].locations[0].latLng.lat\r\n        lng = response.data.results[0].locations[0].latLng.lng\r\n  \r\n  \r\n    }).catch(function (error) {\r\n      console.error(error);\r\n    });\r\n  }\r\n  \r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  map: {\r\n    width: Dimensions.get('window').width,\r\n    height: Dimensions.get('window').height,\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}