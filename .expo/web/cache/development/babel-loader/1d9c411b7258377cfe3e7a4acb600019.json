{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as React from 'react';\nimport { useState } from 'react/cjs/react.development';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function enterDetails() {\n  var navigation = useNavigation();\n\n  var _useState = useState('http://open.mapquestapi.com/geocoding/v1/address?key=saD6wA8skX1MAzw7nKIyqh9LhoxZ0a46&location=24849+NE+2nd+CT,Sammamish,Washington,98074'),\n      _useState2 = _slicedToArray(_useState, 2),\n      address = _useState2[0],\n      setAddress = _useState2[1];\n\n  var _useState3 = useState(\"null\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lat = _useState4[0],\n      setLat = _useState4[1];\n\n  var _useState5 = useState(\"null\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      long = _useState6[0],\n      setLong = _useState6[1];\n\n  var _useState7 = useState(\"1\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      energy = _useState8[0],\n      setEnergy = _useState8[1];\n\n  var _useState9 = useState(\"0.75\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      PR = _useState10[0],\n      setPR = _useState10[1];\n\n  var _useState11 = useState(\"0\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      H = _useState12[0],\n      setH = _useState12[1];\n\n  var _useState13 = useState(\"351\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      Area = _useState14[0],\n      setArea = _useState14[1];\n\n  var _useState15 = useState(\"18\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      r = _useState16[0],\n      setr = _useState16[1];\n\n  var _useState17 = useState(\"null\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      city = _useState18[0],\n      setCity = _useState18[1];\n\n  var _useState19 = useState(\"null\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      state = _useState20[0],\n      setState = _useState20[1];\n\n  var _useState21 = useState(\"null\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      postal = _useState22[0],\n      setPostal = _useState22[1];\n\n  var _useState23 = useState(\"null\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      currentCost = _useState24[0],\n      setCurrentCost = _useState24[1];\n\n  var _useState25 = useState(\"null\"),\n      _useState26 = _slicedToArray(_useState25, 2),\n      currentUsage = _useState26[0],\n      setCurrentUsage = _useState26[1];\n\n  var costPerK = 0;\n\n  function getDNI() {\n    getcoords();\n\n    var axios = require(\"axios\").default;\n\n    var options = {\n      method: 'GET',\n      url: 'https://developer.nrel.gov/api/solar/solar_resource/v1.json?api_key=0mnx2OSLok4UiEoaajb0fh4j2YoFOznGfGHZS78j&lat=' + lat + '&lon=' + long\n    };\n    axios.request(options).then(function (response) {\n      setH(response.data.outputs.avg_dni.annual);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n\n  function getcoords() {\n    var axios = require(\"axios\").default;\n\n    var options = {\n      method: 'GET',\n      url: address\n    };\n    axios.request(options).then(function (response) {\n      console.log(response);\n      setLat(response.data.results[0].locations[0].latLng.lat);\n      setLong(response.data.results[0].locations[0].latLng.lng);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n\n  function calculateEnergy() {\n    getDNI();\n    console.log('h' + H);\n    setEnergy(Area * r * H * PR);\n    console.log(energy + \"KWH\");\n  }\n\n  function nextScreen() {\n    navigation.navigate(\"Return On Investment\", {\n      state: state\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \" Address \"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(val) {\n        return setAddress(val);\n      }\n    }), _jsx(Text, {\n      children: \" City \"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(val) {\n        return setCity(val);\n      }\n    }), _jsx(Text, {\n      children: \" State \"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(val) {\n        return setState(val);\n      }\n    }), _jsx(Text, {\n      children: \" Postal Code \"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(val) {\n        return setPostal(val);\n      }\n    }), _jsx(Text, {\n      children: \" Current Electricity Cost Per Month \"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(val) {\n        return setCurrentCost(val);\n      }\n    }), _jsx(Text, {\n      children: \" Current Electricity Usage Per Month KwH \"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(val) {\n        return setCurrentUsage(val);\n      }\n    }), _jsx(Button, {\n      title: \"Submit\",\n      onPress: function onPress() {\n        return nextScreen();\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#777',\n    padding: 8,\n    margin: 10,\n    width: 200\n  }\n});","map":{"version":3,"sources":["C:/Users/Adith/sp/screens/enterDetails.js"],"names":["React","useState","NavigationContainer","createNativeStackNavigator","useNavigation","enterDetails","navigation","address","setAddress","lat","setLat","long","setLong","energy","setEnergy","PR","setPR","H","setH","Area","setArea","r","setr","city","setCity","state","setState","postal","setPostal","currentCost","setCurrentCost","currentUsage","setCurrentUsage","costPerK","getDNI","getcoords","axios","require","default","options","method","url","request","then","response","data","outputs","avg_dni","annual","catch","error","console","log","results","locations","latLng","lng","calculateEnergy","nextScreen","navigate","styles","container","input","val","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","borderWidth","borderColor","padding","margin","width"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, TextInput, Button } from 'react-native';\r\nimport * as React from 'react';\r\nimport { useState } from 'react/cjs/react.development';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\n\r\n\r\nexport function enterDetails() {\r\n\r\n    const navigation = useNavigation();\r\n    const [address, setAddress] = useState('http://open.mapquestapi.com/geocoding/v1/address?key=saD6wA8skX1MAzw7nKIyqh9LhoxZ0a46&location=24849+NE+2nd+CT,Sammamish,Washington,98074')\r\n    const [lat, setLat] = useState(\"null\")\r\n    const [long, setLong] = useState(\"null\")\r\n    const [energy, setEnergy] = useState(\"1\")\r\n    const [PR, setPR] = useState(\"0.75\")\r\n    const [H, setH] = useState(\"0\")\r\n    const [Area, setArea] = useState(\"351\")\r\n    const [r, setr] = useState(\"18\")\r\n    const [city, setCity] = useState(\"null\")\r\n    const [state, setState] = useState(\"null\")\r\n    const [postal, setPostal] = useState(\"null\")\r\n    const [currentCost, setCurrentCost] = useState(\"null\")\r\n    const [currentUsage, setCurrentUsage] = useState(\"null\")\r\n    const costPerK = 0\r\n    \r\n\r\n    \r\n    function getDNI() {\r\n        getcoords()\r\n        var axios = require(\"axios\").default;\r\n        var options = {\r\n          method: 'GET',\r\n          url: 'https://developer.nrel.gov/api/solar/solar_resource/v1.json?api_key=0mnx2OSLok4UiEoaajb0fh4j2YoFOznGfGHZS78j&lat=' +lat + '&lon=' + long,\r\n          \r\n        };\r\n    \r\n        axios.request(options).then(function (response) {\r\n            \r\n          setH(response.data.outputs.avg_dni.annual)\r\n          \r\n    \r\n    \r\n        }).catch(function (error) {\r\n          console.error(error);\r\n        });\r\n      }\r\n    \r\n      function getcoords() {\r\n        var axios = require(\"axios\").default;\r\n        var options = {\r\n          method: 'GET',\r\n          url: address,\r\n          \r\n        };\r\n    \r\n        axios.request(options).then(function (response) {\r\n            console.log(response)\r\n            setLat(response.data.results[0].locations[0].latLng.lat);\r\n            setLong(response.data.results[0].locations[0].latLng.lng);\r\n            \r\n    \r\n    \r\n        }).catch(function (error) {\r\n          console.error(error);\r\n        });\r\n      }\r\n    \r\n      function calculateEnergy() {\r\n    \r\n        getDNI()\r\n        console.log('h' + H)\r\n        setEnergy(Area*r*H*PR)\r\n        console.log(energy + \"KWH\")\r\n    \r\n      }\r\n      function nextScreen() {\r\n        //costPerK = currentCost/currentUsage\r\n        \r\n        navigation.navigate(\"Return On Investment\",{\r\n            state: state,\r\n        })\r\n      }\r\n    return(\r\n        <View style={styles.container}>\r\n      \r\n            <Text> Address </Text>    \r\n            <TextInput style={styles.input} \r\n\r\n                onChangeText={(val) => setAddress(val)}\r\n            />\r\n            <Text> City </Text>    \r\n            <TextInput style={styles.input} \r\n\r\n                onChangeText={(val) => setCity(val)}\r\n            />\r\n            <Text> State </Text>    \r\n            <TextInput style={styles.input} \r\n\r\n                onChangeText={(val) => setState(val)}\r\n            />\r\n            <Text> Postal Code </Text>    \r\n            <TextInput style={styles.input} \r\n\r\n                onChangeText={(val) => setPostal(val)}\r\n            />\r\n            <Text> Current Electricity Cost Per Month </Text>    \r\n            <TextInput style={styles.input} \r\n\r\n                onChangeText={(val) => setCurrentCost(val)}\r\n            />\r\n            <Text> Current Electricity Usage Per Month KwH </Text>    \r\n            <TextInput style={styles.input} \r\n\r\n                onChangeText={(val) => setCurrentUsage(val)}\r\n            />\r\n            <Button title='Submit' onPress={() => nextScreen()} />\r\n            \r\n      \r\n\r\n        </View>\r\n    )\r\n\r\n    \r\n\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    input: {\r\n      borderWidth: 1,\r\n      borderColor: '#777',\r\n      padding: 8,\r\n      margin: 10,\r\n      width: 200,\r\n  \r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}